services:
  postgres:
    image: postgres:13.0-alpine
    container_name: foodgram_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
    env_file:
      - .env
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$DB_NAME"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  backend:
    image: overwhelmd/foodgram_backend:latest
    container_name: foodgram_backend
    volumes:
      - static_volume:/app/static
      - media_volume:/app/media
    env_file:
      - .env
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped

  frontend:
    image: overwhelmd/foodgram_frontend:latest
    container_name: foodgram_frontend
    volumes:
      - ./frontend:/app/result_build
    depends_on:
      - backend
    restart: unless-stopped

  nginx:
    image: nginx:1.19.3-alpine
    container_name: foodgram_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - ./frontend/build:/usr/share/nginx/html
      - ./docs/redoc.html:/usr/share/nginx/html/api/docs/redoc.html
      - ./docs/openapi-schema.yml:/usr/share/nginx/html/api/docs/openapi-schema.yml
      - static_volume:/var/html/static
      - media_volume:/var/html/media
    depends_on:
      - backend
      - frontend
    restart: unless-stopped

volumes:
  postgres_data:
  static_volume:
  media_volume: